@page "/Sale/Edit/{Id:int}"

@using System.Text.Json.Nodes;
@using KXStoreSystem.Front.Models.Responses;

@inject HttpClient Http;
@inject NavigationManager navManager;

<div class="row">
    <div class="col-lg-8">
        <h1 class="mb-5">Editar Venda</h1>

        @if (sale == null)
        {
            <p><em>Carregando...</em></p>
        }
        else
        {
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Venda ID</label>
                <div class="col-md-8">
                    <input class="form-control-plaintext" value="@Id" readonly />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Produto</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="editSale.ProductName" />
                    <span class="text-danger">@Errors["ProductName"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Valor</label>
                <div class="col-md-8">
                    <input class="form-control" type="number" @bind="editSale.TotalValue" step="0.01">
                    <span class="text-danger">@Errors["TotalValue"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">ID Cliente</label>
                <div class="col-md-8">
                    <input class="form-control" type="number" @bind="editSale.CustomerId">
                    <span class="text-danger">@Errors["CustomerId"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Data da Venda</label>
                <div class="col-md-8">
                    <input class="form-control" type="date" @bind="editSale.Date">
                    <span class="text-danger">@Errors["Date"]?[0]</span>
                </div>
            </div>

            <div class="row">
                <div class="offset-md-4 col-md-4 d-grid">
                    <button class="btn btn-primary" @onclick="SaveSale">Salvar</button>
                </div>
                <div class="col-md-4 d-grid">
                    <a class="btn btn-outline-primary" href="/Sale">Cancelar</a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public SaleResponse? sale = null;
    public EditSaleResponse editSale { get; set; } = new();
    public JsonNode Errors { get; set; } = new JsonObject();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            sale = await Http.GetFromJsonAsync<SaleResponse>($"https://localhost:44344/api/Sale/{Id}");
            if (sale != null)
            {
                editSale.ProductName = sale.ProductName;
                editSale.TotalValue = sale.TotalValue;
                editSale.CustomerId = sale.CustomerId;
                if (sale.Date == null)
                {
                    editSale.Date = DateTime.Now.Date;
                }
                else
                {
                    editSale.Date = sale.Date;
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Exception : " + ex.Message);
        }
    }

    protected async Task SaveSale()
    {
        var response = await Http.PutAsJsonAsync($"https://localhost:44344/api/Sale/{Id}", editSale);

        if (response.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/Sale");
        }
        else
        {
            var strResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Json Response: \n" + strResponse);

            try
            {
                var jsonResponse = JsonNode.Parse(strResponse);
                Errors = jsonResponse?["errors"] ?? new JsonObject();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Erro ao processar a resposta de erro: " + ex.Message);
            }
        }
    }
}
